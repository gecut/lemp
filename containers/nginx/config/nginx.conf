# Configuration File - Nginx Server Configs
# http://nginx.org/en/docs/dirindex.html

# The file storing the process ID of the main process
pid /var/run/nginx.pid ;

# Run as a unique, less privileged user for security reasons.
# user www-data www-data; # user group
user nginx ;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
worker_processes auto ;

# Reduces timer resolution in worker processes, thus reducing the number of gettimeofday() system calls made. By default, gettimeofday() is called each time a kernel event is received. With reduced resolution, gettimeofday() is only called once per specified interval.
timer_resolution 100ms ;

# Defines named thread pools used for multi-threaded reading and sending of files without blocking worker processes.
thread_pool default threads=32 max_queue=65536 ;

events {
    # https://nginx.org/en/docs/events.html
    # use epoll;

    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    # Should be < worker_rlimit_nofile.
    worker_connections 1024 ;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    # multi_accept on;
}

http {
    # set all cache temp paths
    client_body_temp_path /var/cache/client_body 1 2 ;
    proxy_temp_path /var/cache/proxy_temp_path 1 2 ;
    fastcgi_temp_path /var/cache/fastcgi_temp 1 2 ;
    uwsgi_temp_path /var/cache/uwsgi_temp 1 2 ;
    scgi_temp_path /var/cache/scgi_temp 1 2 ;

    log_format simple "$time_local $remote_addr (c:$upstream_cache_status, n:$no_cache) $request_method $scheme://$host$request_uri";
    access_log /var/log/nginx/access.log simple ;
    #   access_log off;
    error_log /var/log/nginx/error.log notice ;

    server_tokens off ;

    tcp_nopush off ;
    tcp_nodelay off ;
    sendfile on ;
    sendfile_max_chunk 512k ;

    # fix dns for docker and ssl
    resolver 127.0.0.11 ipv6=off valid=10s ;
    resolver_timeout 5s ;
    #resolver         1.1.1.1 8.8.8.8 8.8.4.4 valid=60s;
    #resolver_timeout 15s;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on ;

    # Controls whether header fields with invalid names should be ignored. Valid names are composed of English letters, digits, hyphens, and possibly underscores
    ignore_invalid_headers on ;

    # Sets the maximum allowed size of the client request body
    client_max_body_size 24000M ;

    index index.html index.php ;

    #real_ip_header    X-Real-IP;
    real_ip_header X-Forwarded-For ;
    real_ip_recursive on ;
    set_real_ip_from 172.0.0.0/10 ;
    set_real_ip_from 10.0.0.0/10 ;

    # limit_req_zone $binary_remote_addr zone=req_zone:10m rate=200r/s;
    limit_req_zone $binary_remote_addr zone=req_zone:10m rate=1000r/s ;
    limit_req_status 503 ;
    limit_req_log_level notice ;

    # limit_req zone=req_zone burst=1200;
    limit_req zone=req_zone burst=3000 ;

    fastcgi_cache_path /var/cache/fastcgi
    levels=1:2
    keys_zone=fastcgicache:10m
    inactive=48h
    max_size=4g ;

    fastcgi_cache_key $scheme$request_method$host$request_uri ;
    fastcgi_cache_use_stale error timeout invalid_header http_500 ;

    # map $request_method $purge_method {
    #     PURGE   1;
    #     default 0;
    # }

    open_file_cache max=10000 inactive=300s ; # removed from the cache if it has not been accessed during `inactive` time
    open_file_cache_valid 1h ; # Sets a time after which open_file_cache elements should be validated.
    open_file_cache_min_uses 2 ; # Sets the minimum number of file accesses during the period configured by the inactive parameter
    open_file_cache_errors on ; # Enables or disables caching of file lookup errors by open_file_cache.

    open_log_file_cache max=10000 inactive=60s min_uses=2 ; # We need `open_log_file_cache` becouse https://serverfault.com/questions/547421

    include /etc/nginx/conf.d/mime.conf ;
    include /etc/nginx/conf.d/mime-expire.conf ;
    include /etc/nginx/conf.d/nocache.conf ;

    upstream php-fpm {
        #zone php-fpm 32k;
        ip_hash ;
        server wordpress:9000 max_fails=4 fail_timeout=30s ;
    }

    server {
        listen 80 default_server ;
        # listen [::]:80 default_server;
        server_name _ ;

        include /etc/nginx/conf.d/secure.conf ;

        root /var/www/html ;

        error_page 401 403 404 /error/404.html ;
        error_page 500 501 503 504 /error/500.html ;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload;" always ; # always https
        add_header X-Frame-Options SAMEORIGIN ;
        add_header X-Content-Type-Options nosniff ;
        add_header X-XSS-Protection "1; mode=block";
        add_header "X-UA-Compatible" "IE=Edge";
        add_header X-Cache $upstream_cache_status ;
        add_header X-Skip-Cache $no_cache ; # for debug

        gzip on ;
        gzip_buffers 16 8k ;
        gzip_comp_level 4 ;
        gzip_http_version 1.0 ;
        gzip_min_length 1280 ;
        gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon image/bmp ;
        gzip_vary on ;

        location / {
            # This is cool because no php is touched for static content.
            try_files $uri $uri/ /index.php$is_args$args ;
        }

        location @php-fpm {
            try_files $uri =404 ;
            fastcgi_pass php-fpm ;
            include /etc/nginx/conf.d/fastcgi.conf ;
        }

        location ~ [^/]\.php(/|$) {
            try_files $uri $uri/ /index.php$is_args$args @php-fpm ;
            fastcgi_pass php-fpm ;
            include /etc/nginx/conf.d/fastcgi.conf ;
        }

        location = /tc {
            default_type text/html ;
            alias /var/www/html/toggle-cache.html ;
        }

        location /server-info {
            access_log off ;
            default_type text/plain ;
            return 200 "Alwatr Accelerated Web Server";
        }
    }
}
